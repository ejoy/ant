interface "imaterial"
    .implement "material.lua"
    .method "load_res"
    .method "resource"
    .method "set_property"
    .method "system_attribs"
    .method "get_color_palette"
    .method "set_color_palette"
    

interface "imesh"
    .implement "mesh.lua"
    .method "create_vb"
    .method "create_ib"
    .method "init_mesh"

system "matobj_system"
    .implement "matobj_system.lua"
    .method "init"
system "material_system"
    .implement "material.lua"
    .method "component_init"
    .method "end_frame"

system "mesh_system"
    .implement "mesh.lua"
    .method "component_init"
    .method "end_frame"

component "mesh_result".type "lua"
    .require_system "ant.asset|mesh_system"

component "material_result".type "lua"
    .require_system "ant.asset|material_system"
    .require_system "ant.asset|matobj_system"
component "material".type "lua"
    .require_system "ant.asset|material_system"
    .require_system "ant.asset|matobj_system"
policy "material"
    .require_system "ant.asset|material_system"
    .require_system "ant.asset|matobj_system"
    .component "material"

component "mesh".type "lua"
    .require_system "ant.asset|mesh_system"

component "material_setting".type "lua"

component "simplemesh".type "lua"
    .require_system "ant.asset|mesh_system"
component "procedural_mesh"
component "owned_mesh_buffer"